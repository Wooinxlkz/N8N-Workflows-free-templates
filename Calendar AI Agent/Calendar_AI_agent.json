{
  "name": "Calendar_AI_agent",
  "nodes": [
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chatTrigger",
      "typeVersion": 1.3,
      "position": [
        48,
        176
      ],
      "id": "74f7c041-044d-4c33-bed4-17b61060102c",
      "name": "When chat message received",
      "webhookId": "102a3b10-8837-499c-b76d-b5b3488e2f55"
    },
    {
      "parameters": {
        "content": "üöÄ **CHAT TRIGGER SETUP**\n\n**Essential Configuration:**\n‚Ä¢ No additional setup required\n‚Ä¢ Auto-generates webhook URL\n‚Ä¢ Handles chat message input\n\n**Usage:**\n‚Ä¢ Test via chat interface\n‚Ä¢ Webhook URL: Auto-generated\n‚Ä¢ Supports text input only\n\n**Best Practice:**\n‚Ä¢ Keep this as entry point\n‚Ä¢ Connect directly to AI Agent",
        "height": 320,
        "width": 376,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -464,
        48
      ],
      "typeVersion": 1,
      "id": "9324bf01-a1ae-4829-bd2c-28f9d59a06ac",
      "name": "Chat Trigger Config"
    },
    {
      "parameters": {
        "options": {
          "systemMessage": "=<agent_identity>\nYou are a Calendar Assistant specializing in schedule management, appointment coordination, and time organization. You help users efficiently manage their time and commitments.\n</agent_identity>\n\n<agent_capabilities>\n- Schedule appointment suggestions and conflict detection\n- Time zone conversion and meeting coordination  \n- Calendar event planning and organization\n- Availability analysis and optimization\n- Meeting preparation and follow-up reminders\n</agent_capabilities>\n\n<response_framework>\nALWAYS follow this order:\n1. Check current availability first (use Current Date {{ $now.format('yyyy-MM-dd') }} as reference)\n2. Identify available time slots before requesting details\n3. Present clear scheduling options with specific dates/times\n4. Only ask for additional details after confirming availability\n5. Provide alternative options when conflicts exist\n</response_framework>\n\n<agent_behavior>\n- Start every interaction by checking availability\n- Communicate in professional, time-conscious manner\n- Prioritize user's existing commitments\n- Suggest efficient scheduling solutions based on open slots\n- Provide structured, easy-to-follow scheduling information\n</agent_behavior>\n\n<guardrails>\n- Never overbook or suggest conflicting appointments\n- Always confirm timezone assumptions\n- Respect work-life balance boundaries\n- Escalate complex multi-party scheduling to human coordination\n</guardrails>"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        400,
        176
      ],
      "id": "013c2a0e-4ae1-4128-be68-bca241e3fc5c",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "content": "ü§ñ **AI AGENT CONFIGURATION**\n\n**System Message Setup:**\n‚Ä¢ Agent Identity: Calendar Assistant\n‚Ä¢ Capabilities: Schedule management\n‚Ä¢ Response Framework: 5-step process\n‚Ä¢ Behavior Rules: Professional tone\n\n**Key Settings:**\n‚Ä¢ Agent Type: OpenAI Functions\n‚Ä¢ Max Iterations: 10 (recommended)\n‚Ä¢ Tool Selection: Auto\n\n**Requirements:**\n‚Ä¢ Must connect to LLM model\n‚Ä¢ Must connect to memory\n‚Ä¢ Must connect to tools\n\n**Pro Tips:**\n‚Ä¢ Use {{ $now.format() }} for current time\n‚Ä¢ Test system message thoroughly",
        "height": 492,
        "width": 300,
        "color": 2
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        704,
        -224
      ],
      "typeVersion": 1,
      "id": "6e467041-2816-451d-9d8a-faa89c82cb7a",
      "name": "AI Agent Config"
    },
    {
      "parameters": {
        "model": "anthropic/claude-3.7-sonnet",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenRouter",
      "typeVersion": 1,
      "position": [
        256,
        384
      ],
      "id": "dbd393e2-91e6-4ac5-ad5e-59176314b6d2",
      "name": "OpenRouter Chat Model",
      "credentials": {
        "openRouterApi": {
          "id": "Uh6EhUnlPGQ0AEYw",
          "name": "OpenRouter account"
        }
      }
    },
    {
      "parameters": {
        "content": "üîë **OPENROUTER SETUP**\n\n**Credentials Required:**\n‚Ä¢ OpenRouter API Key\n‚Ä¢ Get from: openrouter.ai\n‚Ä¢ Add to n8n credentials\n\n**Model Configuration:**\n‚Ä¢ Current: claude-3.7-sonnet\n‚Ä¢ Alternative: gpt-4o\n‚Ä¢ Cost: Check OpenRouter pricing\n\n**Settings:**\n‚Ä¢ Temperature: 0.1 (precise)\n‚Ä¢ Max Tokens: 4000\n‚Ä¢ Top P: 0.9\n\n**Troubleshooting:**\n‚Ä¢ Verify API key validity\n‚Ä¢ Check model availability\n‚Ä¢ Monitor usage limits",
        "height": 560,
        "width": 280
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -96,
        416
      ],
      "typeVersion": 1,
      "id": "1f6f0c69-5858-4954-bb08-8ea43733ac5e",
      "name": "OpenRouter Config"
    },
    {
      "parameters": {},
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        416,
        384
      ],
      "id": "acb13bd1-aa5b-4b97-bd44-46e20608f9b1",
      "name": "Simple Memory"
    },
    {
      "parameters": {
        "content": "üß† **MEMORY CONFIGURATION**\n\n**Buffer Window Settings:**\n‚Ä¢ Window Size: 10 messages\n‚Ä¢ Type: Conversation Buffer\n‚Ä¢ Auto-cleanup: Enabled\n\n**Memory Behavior:**\n‚Ä¢ Stores recent conversation\n‚Ä¢ Maintains context\n‚Ä¢ Automatic token management\n\n**Performance:**\n‚Ä¢ Low memory usage\n‚Ä¢ Fast retrieval\n‚Ä¢ Session-based\n\n**Usage:**\n‚Ä¢ No additional config needed\n‚Ä¢ Connects to AI Agent\n‚Ä¢ Resets per session",
        "height": 552,
        "width": 260,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        224,
        528
      ],
      "typeVersion": 1,
      "id": "cefaafca-5325-4819-befc-8a34d66e36c6",
      "name": "Memory Config"
    },
    {
      "parameters": {
        "operation": "getAll",
        "calendar": {
          "__rl": true,
          "value": "mouad.hero01@gmail.com",
          "mode": "list",
          "cachedResultName": "My Calendar"
        },
        "returnAll": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Return_All', ``, 'boolean') }}",
        "timeMin": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('After', ``, 'string') }}",
        "timeMax": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Before', ``, 'string') }}",
        "options": {
          "timeZone": {
            "__rl": true,
            "value": "Africa/Casablanca",
            "mode": "list",
            "cachedResultName": "Africa/Casablanca"
          }
        }
      },
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.3,
      "position": [
        768,
        368
      ],
      "id": "ed7f647d-e7c1-4680-96bb-2b5aaf0fe3c5",
      "name": "Availability",
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "EQIGmazJnAOmj5av",
          "name": "Google Calendar account"
        }
      }
    },
    {
      "parameters": {
        "content": "üìÖ **AVAILABILITY CHECKER**\n\n**üîë Credentials Setup:**\n‚Ä¢ Google Calendar OAuth2 API\n‚Ä¢ Enable Google Calendar API\n‚Ä¢ Create OAuth 2.0 credentials\n‚Ä¢ Add redirect URI: your-n8n-url/rest/oauth2-credential/callback\n\n**‚öôÔ∏è Configuration:**\n‚Ä¢ Operation: Get All Events\n‚Ä¢ Calendar: Select your calendar\n‚Ä¢ Time Zone: Africa/Casablanca\n‚Ä¢ Return All: AI-controlled\n‚Ä¢ Time Min/Max: AI-controlled\n\n**üéØ AI Override Parameters:**\n‚Ä¢ $fromAI('Return_All', '', 'boolean')\n‚Ä¢ $fromAI('After', '', 'string')\n‚Ä¢ $fromAI('Before', '', 'string')\n\n**‚úÖ Testing:**\n‚Ä¢ Test with date ranges\n‚Ä¢ Verify timezone handling\n‚Ä¢ Check calendar permissions",
        "height": 516,
        "width": 320,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        880,
        368
      ],
      "typeVersion": 1,
      "id": "19406780-3911-4f81-bb09-deee23ad3cb2",
      "name": "Availability Config"
    },
    {
      "parameters": {
        "calendar": {
          "__rl": true,
          "value": "mouad.hero01@gmail.com",
          "mode": "list",
          "cachedResultName": "My Calendar"
        },
        "start": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Start', ``, 'string') }}",
        "end": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('End', ``, 'string') }}",
        "additionalFields": {
          "attendees": [
            "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('attendees0_Attendees', ``, 'string') }}"
          ],
          "summary": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Summary', ``, 'string') }}"
        }
      },
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.3,
      "position": [
        608,
        400
      ],
      "id": "99fd5eaa-6ef5-4e75-8e4f-536a9ce26481",
      "name": "Booking",
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "EQIGmazJnAOmj5av",
          "name": "Google Calendar account"
        }
      }
    },
    {
      "parameters": {
        "content": "üìù **BOOKING CONFIGURATION**\n\n**üîë Same Credentials as Availability:**\n‚Ä¢ Use same Google Calendar OAuth2\n‚Ä¢ Ensure write permissions\n\n**‚öôÔ∏è Required Parameters:**\n‚Ä¢ Calendar: Same as availability\n‚Ä¢ Start: AI-controlled datetime\n‚Ä¢ End: AI-controlled datetime\n‚Ä¢ Summary: AI-controlled title\n\n**üë• Optional Fields:**\n‚Ä¢ Attendees: AI-controlled emails\n‚Ä¢ Description: Event details\n‚Ä¢ Location: Meeting location\n‚Ä¢ Reminders: Notification settings\n\n**üéØ AI Override Format:**\n‚Ä¢ Start/End: ISO datetime format\n‚Ä¢ Summary: Event title string\n‚Ä¢ Attendees: Email addresses\n\n**‚ö†Ô∏è Important:**\n‚Ä¢ Test with simple booking first\n‚Ä¢ Verify timezone handling\n‚Ä¢ Check conflict detection",
        "height": 504,
        "width": 320
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        496,
        592
      ],
      "typeVersion": 1,
      "id": "92cbec91-bdf9-4a2c-bf40-9495b656bc24",
      "name": "Booking Config"
    },
    {
      "parameters": {
        "content": "üîß **GOOGLE CALENDAR API SETUP GUIDE**\n\n**1. Enable Google Calendar API:**\n‚Ä¢ Go to Google Cloud Console\n‚Ä¢ Create/select project\n‚Ä¢ Enable Calendar API\n‚Ä¢ Create OAuth 2.0 credentials\n\n**2. OAuth Configuration:**\n‚Ä¢ Authorized redirect URIs:\n  https://your-n8n-domain/rest/oauth2-credential/callback\n‚Ä¢ Scopes needed:\n  - https://www.googleapis.com/auth/calendar\n  - https://www.googleapis.com/auth/calendar.events\n\n**3. n8n Credential Setup:**\n‚Ä¢ Add new credential\n‚Ä¢ Choose Google Calendar OAuth2 API\n‚Ä¢ Enter Client ID & Secret\n‚Ä¢ Complete OAuth flow\n\n**4. Calendar Selection:**\n‚Ä¢ Primary: your-email@gmail.com\n‚Ä¢ Secondary: Select from dropdown\n‚Ä¢ Permissions: Read/Write required\n\n**‚ö†Ô∏è Common Issues:**\n‚Ä¢ Invalid redirect URI\n‚Ä¢ Insufficient scopes\n‚Ä¢ Calendar not shared\n‚Ä¢ Timezone mismatches",
        "height": 804,
        "width": 340,
        "color": 2
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1328,
        192
      ],
      "typeVersion": 1,
      "id": "2e4f4119-ae08-4ab8-84e1-0038d763713f",
      "name": "Google API Setup"
    },
    {
      "parameters": {
        "content": "üéØ **AI TOOL INTEGRATION TIPS**\n\n**$fromAI Parameters Explained:**\n‚Ä¢ Return_All: Boolean for pagination\n‚Ä¢ After/Before: Date range strings\n‚Ä¢ Start/End: Event datetime (ISO format)\n‚Ä¢ Summary: Event title\n‚Ä¢ Attendees: Email array\n\n**Best Practices:**\n‚Ä¢ Use clear parameter names\n‚Ä¢ Provide default values\n‚Ä¢ Handle timezone conversions\n‚Ä¢ Validate datetime formats\n\n**Testing Strategy:**\n1. Test availability check first\n2. Verify date parsing\n3. Test booking creation\n4. Check conflict handling\n5. Validate attendee emails\n\n**Monitoring:**\n‚Ä¢ Check execution logs\n‚Ä¢ Monitor API rate limits\n‚Ä¢ Verify event creation\n‚Ä¢ Test error handling",
        "height": 624,
        "width": 300,
        "color": 6
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1680,
        288
      ],
      "typeVersion": 1,
      "id": "699cdf95-6063-4bef-aed9-792828eb74ba",
      "name": "AI Integration Tips"
    }
  ],
  "pinData": {},
  "connections": {
    "When chat message received": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenRouter Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Availability": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Booking": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "f22897ce-7811-4399-a3da-0ba8532b00d2",
  "meta": {
    "templateId": "calendar_agent_with_gcal",
    "templateCredsSetupCompleted": true,
    "instanceId": "66c58b798d3adbdaf64a47b3041d335e10015ca13cec5104fbf9f568a82eba73"
  },
  "id": "u4JXdH2VVdQtghYG",
  "tags": []
}